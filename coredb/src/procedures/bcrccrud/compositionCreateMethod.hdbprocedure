PROCEDURE "procedures::compositionCreateMethod" ( 
IN im_row "COM.Composition",
OUT ex_error "Procedures.tt_errors")
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
	--DEFAULT SCHEMA <default_schema_name>
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/

declare lv_matId string;
declare lv_substanceId string;
declare lv_type string;
declare lv_quantity decimal(13,3);
declare lv_uom string;

select "MaterialID", "SubstanceID", "Type", "Quantity", "UoM"
     into lv_matId, lv_substanceId, lv_type, lv_quantity, lv_uom from :im_row;
                     
                     
if :lv_matId = '' or :lv_substanceId = '' or :lv_type = '' or :lv_quantity = '' or :lv_uom = '' then
  ex_error = select 500 as http_status_code, 
               'Invalid entry ' || lv_matId as error_message, 
                     'None of the fields MaterialID, SubstanceID, Type, Quantity, UoM can not be empty' as detail from dummy;
else
                      
   insert into "COM.Composition" 
             values (lv_matId, lv_substanceId, lv_type, lv_quantity, lv_uom);
                     
end if; 
  
END;